# üìÅ reminder_parser.py
# T·∫°o nh·∫Øc vi·ªác b·∫±ng ng√¥n ng·ªØ t·ª± nhi√™n ‚Üí xu·∫•t th√†nh reminder c·∫•u tr√∫c
import re
from datetime import datetime, timedelta
import uuid

VIETDAY = {
    "th·ª© hai": "monday",
    "th·ª© ba": "tuesday",
    "th·ª© t∆∞": "wednesday",
    "th·ª© nƒÉm": "thursday",
    "th·ª© s√°u": "friday",
    "th·ª© b·∫£y": "saturday",
    "ch·ªß nh·∫≠t": "sunday"
}

def parse_natural_reminder(text):
    result = {
        "id": int(str(uuid.uuid4().int)[:6]),
        "text": "",
        "time": "",
        "repeat": None,
        "repeat_count": None,
        "expires": None,
        "days_of_week": None,
        "status": "active"
    }

    # T√°ch ph·∫ßn n·ªôi dung c·∫ßn nh·∫Øc
    match_text = re.search(r"nh·∫Øc.*?l√†\s(.+)", text)
    if match_text:
        result["text"] = match_text.group(1).strip()
    else:
        result["text"] = text.strip()

    # T√¨m gi·ªù d·∫°ng HH:MM
    match_time = re.search(r"(\d{1,2})[h:](\d{2})", text)
    if match_time:
        hour = match_time.group(1).zfill(2)
        minute = match_time.group(2).zfill(2)
        result["time"] = f"{hour}:{minute}"

    # L·∫∑p m·ªói ng√†y / tu·∫ßn
    if "m·ªói ng√†y" in text or "h·∫±ng ng√†y" in text:
        result["repeat"] = "daily"
    if "h√†ng tu·∫ßn" in text or "m·ªói tu·∫ßn" in text:
        result["repeat"] = "weekly"

    # Ng√†y c·ª• th·ªÉ trong tu·∫ßn
    days = [v for k, v in VIETDAY.items() if k in text]
    if days:
        result["repeat"] = "weekly"
        result["days_of_week"] = days

    # S·ªë l·∫ßn nh·∫Øc
    match_count = re.search(r"(\d+) l·∫ßn", text)
    if match_count:
        result["repeat_count"] = int(match_count.group(1))

    # H·∫øt h·∫°n v√†o ng√†y n√†o
    match_expire = re.search(r"ƒë·∫øn ng√†y (\d{1,2})[/-](\d{1,2})[/-](\d{4})", text)
    if match_expire:
        d, m, y = match_expire.groups()
        result["expires"] = f"{y}-{m.zfill(2)}-{d.zfill(2)}"

    return result

if __name__ == '__main__':
    test = "Nh·∫Øc m·ªói th·ª© b·∫£y l√∫c 19h g·ªçi ƒëi·ªán cho m·∫π, l·∫∑p h√†ng tu·∫ßn vƒ©nh vi·ªÖn"
    print(parse_natural_reminder(test))
